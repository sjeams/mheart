{"version":3,"sources":["assets\\Script\\scence\\scoretrump.js"],"names":["cc","Class","Component","properties","content","Node","person","Prefab","test_scrollView","type","ScrollView","test_pageView","PageView","onLoad","spawnTools","_this","HttpHelper","require","httpRequest","params","httpPost","data","cellWidth","width","cellHeight","height","spacingX","spacingY","getComponent","Layout","cellSize","toolsArray","TOOLS","server","i","length","tool","instantiate","console","log","initInfo","push","addChild","scorllheight","parent","Math","ceil","setContentSize","addTouchEvent","node_1","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n            //测试item\r\n      //   content: {\r\n      //     default: null,\r\n      //     type: cc.Node\r\n      //   },\r\n\r\n      // person: {\r\n      //   default: null,\r\n      //   type: cc.Prefab\r\n      // },\r\n\r\n      content: cc.Node,\r\n      person: cc.Prefab,\r\n\r\n      //列表\r\n      test_scrollView: {\r\n        default: null,\r\n        type: cc.ScrollView\r\n      },\r\n      //翻页容器\r\n      test_pageView: {\r\n        default: null,\r\n        type: cc.PageView\r\n      },\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     let person = cc.instantiate(this.person);\r\n        //     this.conten=person\r\n        //     // person.parent = this.content;\r\n        //     // this.addTouchEvent(person);  //添加触摸事件\r\n        //   }\r\n        // this.value_set = [];\r\n        // // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        // for(var i = 1; i <= 100; i ++) {\r\n        //     this.value_set.push(i);\r\n        // }\r\n\r\n        // this.content = this.scroll_view.content;\r\n        // this.opt_item_set = [];\r\n        // for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n        //     var item = cc.instantiate(this.item_prefab);\r\n        //     this.content.addChild(item);\r\n        //     this.opt_item_set.push(item);\r\n        // }\r\n      this.spawnTools()\r\n        // this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n    },\r\n\r\n    spawnTools () {\r\n      var _this =this;\r\n      var HttpHelper = require(\"http\"); \r\n      var httpRequest = new HttpHelper();\r\n      var params = {\r\n              'page': 1,\r\n              'pageSize': 4,\r\n      };\r\n      httpRequest.httpPost('https://www.aheart.cn/app/api-server/user-register', params, function (data) {\r\n      //   console.log(data);\r\n          // console.log(_this.content)\r\n          // let cellWidth = _this.content.width * 0.105;\r\n          // let cellHeight = _this.content.height * 0.215;\r\n          // let spacingX = _this.content.width * 0.022;\r\n          // let spacingY = _this.content.height * 0.045;\r\n          let cellWidth = _this.content.width * 0.15;\r\n          let cellHeight = _this.content.height * 0.15;\r\n          let spacingX = _this.content.width * 0.08;\r\n          let spacingY = _this.content.height * 0.05;\r\n\r\n          \r\n          _this.content.getComponent(cc.Layout).cellSize.width = cellWidth;\r\n          _this.content.getComponent(cc.Layout).cellSize.height = cellHeight;\r\n          _this.content.getComponent(cc.Layout).spacingX = spacingX;\r\n          _this.content.getComponent(cc.Layout).spacingY = spacingY;\r\n          // 根据TOOLS生成相应的道具\r\n          _this.toolsArray = [];\r\n          let TOOLS = data.data.server;\r\n        \r\n          for (let i=0; i<data.data.server.length; i++) {\r\n              let tool = cc.instantiate(_this.person);\r\n              console.log(TOOLS[i])\r\n              // _this.content.addChild(tool);\r\n              tool.getComponent('Tools').initInfo(TOOLS[i]);\r\n              _this.toolsArray.push(tool);\r\n              _this.content.addChild(tool);\r\n              console.log(tool)\r\n              \r\n          }\r\n          // 定义content滚动条高度\r\n          let scorllheight =  _this.content.parent;\r\n          //计算滚动条高度\r\n          let  height =  (cellHeight+spacingY)*( Math.ceil( data.data.server.length/2));\r\n          // console.log(height);\r\n          // scorllheight.designResolution  = new cc.Size(600, height);\r\n          scorllheight.setContentSize(600,height);\r\n      })\r\n  },\r\n\r\n    addTouchEvent(node_1) {\r\n        node_1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n      },\r\n    // start: function() {\r\n    //     this.start_y = this.content.y;\r\n    //     this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n    //     this.load_record(this.start_index);\r\n    // },\r\n\r\n    // // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    // load_record: function(start_index) {\r\n    //     this.start_index = start_index;\r\n\r\n    //     for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n    //         var label = this.opt_item_set[i].getChildByName(\"src\").getComponent(cc.Label);\r\n    //         // 显示我们的记录;\r\n    //         label.string = this.value_set[start_index + i];\r\n    //     }\r\n    // },\r\n\r\n    // on_scroll_ended: function() {\r\n    //     this.scrollveiw_load_recode();\r\n    //     this.scroll_view.elastic = true;\r\n    // },\r\n\r\n    // scrollveiw_load_recode: function() {\r\n    //      // 向下加载了\r\n    //     if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n    //         this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n    //             return;\r\n    //         }\r\n\r\n    //         var down_loaded = this.PAGE_NUM;\r\n    //         this.start_index += down_loaded;\r\n    //         if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n    //             var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n    //             down_loaded -= (out_len);\r\n    //             this.start_index -= (out_len);\r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n\r\n    //         this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // 向上加载\r\n    //     if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false;\r\n    //             return;\r\n    //         }\r\n\r\n    //         var up_loaded = this.PAGE_NUM;\r\n    //         this.start_index -= up_loaded;\r\n    //         if (this.start_index < 0) {\r\n    //             up_loaded += this.start_index;\r\n    //             this.start_index = 0; \r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n    //         this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n    //     }\r\n    //     // end \r\n    // },\r\n    // // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    //     this.scrollveiw_load_recode();\r\n    // },\r\n});\r\n"]}
{"version":3,"sources":["assets\\Script\\scence\\map_score.js"],"names":["HttpHelper","require","httpRequest","cc","Class","Component","properties","onLoad","spawnTools","_this","httpPost","data","reloadWord","addWordMap","addMapPic","map_pic","remoteUrl","httpUrl","loader","load","url","err","texture","home","getComponent","Sprite","spriteFrame","SpriteFrame","find","removeAllChildren","destroyAllChildren","Label","string","name","time","type_name","info","user_in_word_map","BoxPrefab","biology_detail_list","addTouchEvent","node_1","on","Node","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","back_map","playGame","urlConfig"],"mappings":"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","sourceRoot":"/","sourcesContent":["var HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {  \r\n      // content: cc.Node,\r\n      // // person: cc.Prefab,\r\n      // // home: cc.Node,\r\n      // // reload: cc.Node,\r\n      // //列表\r\n      // test_scrollView: {\r\n      //   default: null,\r\n      //   type: cc.ScrollView\r\n      // },\r\n      // //翻页容器\r\n      // test_pageView: {\r\n      //   default: null,\r\n      //   type: cc.PageView\r\n      // },\r\n\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     let person = cc.instantiate(this.person);\r\n        //     this.conten=person\r\n        //     // person.parent = this.content;\r\n        //     // this.addTouchEvent(person);  //添加触摸事件\r\n        //   }\r\n        // this.value_set = [];\r\n        // // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        // for(var i = 1; i <= 100; i ++) {\r\n        //     this.value_set.push(i);\r\n        // }\r\n\r\n        // this.content = this.scroll_view.content;\r\n        // this.opt_item_set = [];\r\n        // for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n        //     var item = cc.instantiate(this.item_prefab);\r\n        //     this.content.addChild(item);\r\n        //     this.opt_item_set.push(item);\r\n        // }\r\n      this.spawnTools()\r\n        // this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n    },\r\n\r\n    spawnTools () {\r\n      var _this =this;\r\n      httpRequest.httpPost('/app/app-apiword/index',{}, function (data) {\r\n          // _this.addMapPic(data) //生成地图\r\n          if(!data.data){\r\n              //刷新地图\r\n              // httpRequest.playGame(httpRequest.urlConfig(\"sence_ditu\"));\r\n              _this.reloadWord()//刷新世界地图\r\n          }else{\r\n              //生成世界\r\n              // let cellWidth = cc.find('Canvas/战斗/content').width * 0.105;\r\n              // let cellHeight = cc.find('Canvas/战斗/content').height * 0.215;\r\n              // let spacingX = cc.find('Canvas/战斗/content').width * 0.022;\r\n              // let spacingY = cc.find('Canvas/战斗/content').height * 0.045;\r\n\r\n              // cc.find('Canvas/战斗/content').getComponent(cc.Layout).cellSize.width = cellWidth;\r\n              // cc.find('Canvas/战斗/content').getComponent(cc.Layout).cellSize.height = cellHeight;\r\n              // cc.find('Canvas/战斗/content').getComponent(cc.Layout).spacingX = spacingX;\r\n              // cc.find('Canvas/战斗/content').getComponent(cc.Layout).spacingY = spacingY;\r\n              _this.addWordMap(data) //生成生物\r\n          }\r\n      })\r\n    },\r\n    //生成地图\r\n    addMapPic(data){\r\n        var _this = this;\r\n        if(data.data['map_pic']){\r\n          var  map_pic =data.data['map_pic'];\r\n        }else{\r\n          var  map_pic =data.data['picture'];\r\n        }\r\n        var remoteUrl = httpRequest.httpUrl(map_pic);\r\n          cc.loader.load({ url: remoteUrl }, function (err, texture) {  \r\n            if(texture!=null){\r\n              _this.home.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n            }\r\n        });\r\n    },\r\n    reloadWord(){\r\n      var _this =this;\r\n      // var params = {\r\n      //   'page': 1,\r\n      //   'pageSize': 12,\r\n      // };\r\n      httpRequest.httpPost('/app/app-apiword/map-word',{}, function (data) {\r\n        //移除节点\r\n        cc.find('Canvas/战斗/content').removeAllChildren();\r\n        cc.find('Canvas/战斗/content').destroyAllChildren();\r\n        //写入地图数据\r\n        _this.addWordMap(data)\r\n        })\r\n    },\r\n    //生成生物\r\n    addWordMap(data){\r\n        // cc.log(data)\r\n        cc.find('Canvas/tips/当前世界').getComponent(cc.Label).string = data.data.name+'('+data.data.time+'年)' \r\n        cc.find('Canvas/tips/流速').getComponent(cc.Label).string = '流速: '+data.data.time+'年/S' \r\n        cc.find('Canvas/tips/类型').getComponent(cc.Label).string = '类型: '+data.data.type_name\r\n        // cc.find('Canvas/tips/时间').getComponent(cc.Label).string = '世界时间: '+data.data.name+'('+data.data.time+'年)' \r\n        let info =data.data.user_in_word_map;\r\n\r\n        //技能图标挂载\r\n        var BoxPrefab = cc.find('Canvas/战斗/content')\r\n        BoxPrefab.getComponent('mapTools').biology_detail_list(BoxPrefab,info)\r\n    },\r\n    addTouchEvent(node_1) {\r\n        node_1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n      },\r\n      back_map(){\r\n        //移除节点\r\n        var _this = this;\r\n        cc.find('Canvas/战斗/content').removeAllChildren();\r\n        cc.find('Canvas/战斗/content').destroyAllChildren();\r\n        httpRequest.playGame(httpRequest.urlConfig(\"sence_zhutian\"));\r\n      },\r\n    // start: function() {\r\n    //     this.start_y = this.content.y;\r\n    //     this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n    //     this.load_record(this.start_index);\r\n    // },\r\n\r\n    // // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    // load_record: function(start_index) {\r\n    //     this.start_index = start_index;\r\n\r\n    //     for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n    //         var label = this.opt_item_set[i].getChildByName(\"src\").getComponent(cc.Label);\r\n    //         // 显示我们的记录;\r\n    //         label.string = this.value_set[start_index + i];\r\n    //     }\r\n    // },\r\n\r\n    // on_scroll_ended: function() {\r\n    //     this.scrollveiw_load_recode();\r\n    //     this.scroll_view.elastic = true;\r\n    // },\r\n\r\n    // scrollveiw_load_recode: function() {\r\n    //      // 向下加载了\r\n    //     if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n    //         this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n    //             return;\r\n    //         }\r\n\r\n    //         var down_loaded = this.PAGE_NUM;\r\n    //         this.start_index += down_loaded;\r\n    //         if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n    //             var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n    //             down_loaded -= (out_len);\r\n    //             this.start_index -= (out_len);\r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n\r\n    //         this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // 向上加载\r\n    //     if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false;\r\n    //             return;\r\n    //         }\r\n\r\n    //         var up_loaded = this.PAGE_NUM;\r\n    //         this.start_index -= up_loaded;\r\n    //         if (this.start_index < 0) {\r\n    //             up_loaded += this.start_index;\r\n    //             this.start_index = 0; \r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n    //         this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n    //     }\r\n    //     // end \r\n    // },\r\n    // // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    //     this.scrollveiw_load_recode();\r\n    // },\r\n});\r\n"]}
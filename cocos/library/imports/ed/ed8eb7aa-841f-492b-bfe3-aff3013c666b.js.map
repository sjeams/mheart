{"version":3,"sources":["assets\\Script\\fighting\\score_fighting.js"],"names":["HttpHelper","require","httpRequest","params","cc","Class","Component","properties","toolsArray","content","Node","person","Prefab","home","reload","back","test_scrollView","type","ScrollView","test_pageView","PageView","onLoad","spawnTools","_this","figthing_remote_url","sys","localStorage","getItem","playGame","remoteUrl","httpUrlJson","loader","load","url","err","data","console","log","removeAllChildren","destroyAllChildren","init_postion","poition_my","biolgy_state","poition_enemy","addMapPic","boat","fighting_history","length","map_pic","httpUrl","texture","getComponent","Sprite","spriteFrame","SpriteFrame","postion","int_px","is_my","TOOLS","total","i","map","biology","tool","instantiate","initInfo","x","parseInt","y","push","addChild","fighting","this_node","action","speed","sequence","moveTo","runAction","bagBtn","gridLayout","parent","active","forEach","element","removeFromParent","hp_update","hp","fill","all_hp","hp_now","fillstart","act_shan","fadeTo","repeat","scheduleOnce","state","bind","reloadWord","httpPost","addWordMap","back_map","dynamicAtlasManager","reset","director","loadScene","back_home","addTouchEvent","node_1","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n// 世界操作  \r\nvar HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\nvar params =[];\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n            //测试item\r\n      //   content: {\r\n      //     default: null,\r\n      //     type: cc.Node\r\n      //   },\r\n\r\n      // person: {\r\n      //   default: null,\r\n      //   type: cc.Prefab\r\n      // },\r\n      // 根据TOOLS生成相应的道具\r\n      toolsArray:[],      \r\n      content: cc.Node,\r\n      person: cc.Prefab,\r\n      home: cc.Node,\r\n      reload: cc.Node,\r\n      back: cc.Node,\r\n      //列表\r\n      test_scrollView: {\r\n        default: null,\r\n        type: cc.ScrollView\r\n      },\r\n      //翻页容器\r\n      test_pageView: {\r\n        default: null,\r\n        type: cc.PageView\r\n      },\r\n\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad: function () {\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     let person = cc.instantiate(this.person);\r\n        //     this.conten=person\r\n        //     // person.parent = this.content;\r\n        //     // this.addTouchEvent(person);  //添加触摸事件\r\n        //   }\r\n        // this.value_set = [];\r\n        // // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        // for(var i = 1; i <= 100; i ++) {\r\n        //     this.value_set.push(i);\r\n        // }\r\n\r\n        // this.content = this.scroll_view.content;\r\n        // this.opt_item_set = [];\r\n        // for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n        //     var item = cc.instantiate(this.item_prefab);\r\n        //     this.content.addChild(item);\r\n        //     this.opt_item_set.push(item);\r\n        // }\r\n      // httpRequest.playGameLoading()\r\n      // cc.dynamicAtlasManager.showDebug(true);\r\n      this.spawnTools()\r\n        // this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n          // fighting_history\r\n\r\n    },\r\n \r\n    spawnTools () {\r\n      var _this =this;\r\n      var figthing_remote_url = cc.sys.localStorage.getItem('figthing_remote_url'); //读取数据--战斗记录\r\n\r\n      if(figthing_remote_url==null){\r\n         httpRequest.playGame('map/诸天地图');\r\n      }else{\r\n        var remoteUrl = httpRequest.httpUrlJson(figthing_remote_url);\r\n        cc.loader.load({ url: remoteUrl }, function (err, data) {\r\n          console.log(data) \r\n          // _this.addWordMap(results) //生成生物\r\n          // _self.node.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture)\r\n          //移除节点\r\n          _this.content.removeAllChildren();\r\n          _this.content.destroyAllChildren();\r\n          // 初始化阵容\r\n          _this.init_postion(data.data.poition_my,data.data.biolgy_state,-50,1) //生成生物--position_my\r\n          _this.init_postion(data.data.poition_enemy,data.data.biolgy_state,50,0) //生成生物--position_ememy\r\n          _this.addMapPic(data) //生成地图\r\n\r\n          for (let boat=0; boat<data.data.fighting_history.length; boat++) {\r\n              _this.fighting_history(data.data.fighting_history[boat].fighting_history)//执行战斗顺序\r\n          }\r\n\r\n      });    \r\n      }\r\n    },\r\n    //生成地图\r\n    addMapPic(data){\r\n        var _this = this;\r\n        var  map_pic =data.data['map_pic'];\r\n        var remoteUrl = httpRequest.httpUrl(map_pic);\r\n        // console.log(remoteUrl)\r\n        cc.loader.load({ url: remoteUrl }, function (err, texture) {  \r\n          _this.home.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    },\r\n    //生成生物\r\n    init_postion(postion,biolgy_state,int_px,is_my){\r\n        var _this = this;\r\n        let TOOLS = postion;\r\n        var total = postion.length;\r\n        // var fi = cc.fadeIn(2)//渐显效果\r\n        // _this.content.runAction(fi);\r\n        // var fo = cc.fadeOut(1)//渐隐效果\r\n        // _this.content.runAction(fo);\r\n        // let  tool = cc.instantiate(_this.person);\r\n        //添加节点\r\n        for (let i=0; i<total; i++) {\r\n            // console.log(i) \r\n            //死亡移除map_status\r\n            var map =TOOLS[i];\r\n            if(map.biology.length!=0){\r\n              var tool = cc.instantiate(_this.person);\r\n              tool.getComponent('fightingTools').initInfo(map.biology,biolgy_state,is_my);\r\n              tool.x=parseInt(map.x+int_px)\r\n              tool.y=map.y\r\n              _this.toolsArray.push(tool);\r\n              // tool.setPosition(map.x,map.y);  \r\n              _this.content.addChild(tool); \r\n            }\r\n        }\r\n    },\r\n\r\n    fighting_history (fighting) {\r\n      console.log(fighting)\r\n      var _this = this;\r\n      var this_node =this.toolsArray[0];\r\n      for (let i=0; i<fighting.length; i++) {\r\n        let action =  cc.speed(cc.sequence(cc.moveTo(1,400,200), cc.moveTo(1,this_node.y,this_node.x)), 1)\r\n        // let action = cc.moveTo(1, 100, 100)\r\n        // cc.jumpTo(3, 200, 200, 50, 5)\r\n        // 执行动作，所有的动作都需要一个目标通过 runAction 去执行它\r\n        this_node.runAction(action)\r\n      }\r\n        //   // 删除所有道具(或者不删，只是隐藏，自己决定)\r\n        //   for (let i=0; i<total; i++) {\r\n        //   this.toolsArray.forEach(element => {\r\n        //   //     var color = ['#FFFFFF','green','#BDFF00','#FFD100','#FF0000','#ffe000',];\r\n        //   //     // var type_color = color[info['yiXing']];\r\n        //   //     // console.log(info['color']);\r\n        //   //     element.getChildByName('生物').color = new cc.color(info['color']);\r\n        //   //     // console.log(info)\r\n        //   //     var star ='';    \r\n        //   //     for(i=0;i<=info['yiXing'];i++){\r\n        //   //         star +='⭐';\r\n        //   //     }\r\n        //   //     element.getChildByName('生命s').getComponent(cc.Label).string= info['shengMing']+'/'+info['shengMing'];\r\n        //   //     element.getChildByName('魔法s').getComponent(cc.Label).string= info['moFa']+'/'+info['moFa'];\r\n        //   //     element.getChildByName('生物名称s').getComponent(cc.Label).string= info['name'];\r\n        //   //     element.getChildByName('生物等级s').getComponent(cc.Label).string= 'Lv.'+info['grade']+'('+biolgy_state[info['state']]+')';\r\n        //   //     element.getChildByName('星星s').getComponent(cc.Label).string= star;\r\n        //   //     console.log(element)\r\n        //   //     // element.removeFromParent();\r\n        //   });\r\n        // }\r\n    },\r\n    bagBtn () {\r\n      // 背包按钮\r\n      if (this.gridLayout.parent.active) {\r\n          // 隐藏节点\r\n          this.gridLayout.parent.active = false;\r\n\r\n          // 删除所有道具(或者不删，只是隐藏，自己决定)\r\n          this.toolsArray.forEach(element => {\r\n              element.removeFromParent();\r\n          });\r\n      }\r\n      else {\r\n          // 显示节点\r\n          this.gridLayout.parent.active = true;\r\n\r\n          // 生成所有道具\r\n          this.spawnTools();\r\n      }\r\n    },\r\n    // 刷新血条\r\n    hp_update(){\r\n      //受到15伤害\r\n      this.hp -= 15;\r\n      // 求出伤害血量占比并显示\r\n      let fill = this.hp /this.all_hp;\r\n      this.hp_now.fillstart = 1 - fill; \r\n\r\n      // 血条延迟，秒执行一次，一共执行六次，延迟为0\r\n      // this.schedule(function(){\r\n      //     this.magnetnumber-=5/8;\r\n      // },1,6,0);\r\n\r\n      //0.5秒内闪烁\r\n      let act_shan = cc.sequence(cc .fadeTo(0.05,0),cc.fadeTo(0.05,255));\r\n      element.runAction(cc.repeat(act_shan,5));\r\n      //0.5秒后还可以被攻击\r\n        this.scheduleOnce(function() {\r\n          this.state = 0;\r\n        }.bind(this),0.5);\r\n    },\r\n    reloadWord(){\r\n      var _this =this;\r\n      httpRequest.httpPost('/app/app-apiword/map-word', params, function (data) {\r\n        //写入地图数据\r\n        _this.addWordMap(data)\r\n        })\r\n    },\r\n    back_map(){\r\n      //销毁动态合图\r\n      cc.dynamicAtlasManager.reset()\r\n      cc.director.loadScene('map/诸天地图');\r\n    },\r\n    back_home(){\r\n      //销毁动态合图\r\n      cc.dynamicAtlasManager.reset()\r\n      cc.director.loadScene('大厅');\r\n    },\r\n    addTouchEvent(node_1) {\r\n        node_1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n      },\r\n    // start: function() {\r\n    //     this.start_y = this.content.y;\r\n    //     this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n    //     this.load_record(this.start_index);\r\n    // },\r\n\r\n    // // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    // load_record: function(start_index) {\r\n    //     this.start_index = start_index;\r\n\r\n    //     for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n    //         var label = this.opt_item_set[i].getChildByName(\"src\").getComponent(cc.Label);\r\n    //         // 显示我们的记录;\r\n    //         label.string = this.value_set[start_index + i];\r\n    //     }\r\n    // },\r\n\r\n    // on_scroll_ended: function() {\r\n    //     this.scrollveiw_load_recode();\r\n    //     this.scroll_view.elastic = true;\r\n    // },\r\n\r\n    // scrollveiw_load_recode: function() {\r\n    //      // 向下加载了\r\n    //     if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n    //         this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n    //             return;\r\n    //         }\r\n\r\n    //         var down_loaded = this.PAGE_NUM;\r\n    //         this.start_index += down_loaded;\r\n    //         if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n    //             var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n    //             down_loaded -= (out_len);\r\n    //             this.start_index -= (out_len);\r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n\r\n    //         this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // 向上加载\r\n    //     if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false;\r\n    //             return;\r\n    //         }\r\n\r\n    //         var up_loaded = this.PAGE_NUM;\r\n    //         this.start_index -= up_loaded;\r\n    //         if (this.start_index < 0) {\r\n    //             up_loaded += this.start_index;\r\n    //             this.start_index = 0; \r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n    //         this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n    //     }\r\n    //     // end \r\n    // },\r\n    // // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    //     this.scrollveiw_load_recode();\r\n    // },\r\n});\r\n"]}
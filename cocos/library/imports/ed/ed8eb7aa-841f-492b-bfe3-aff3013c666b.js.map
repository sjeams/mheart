{"version":3,"sources":["assets\\Script\\fighting\\score_fighting.js"],"names":["HttpHelper","require","httpRequest","params","cc","Class","Component","properties","int_num","toolsArray","fightingArray","content","Node","person","Prefab","home","reload","back","test_scrollView","type","ScrollView","test_pageView","PageView","init","onLoad","spawnTools","opacity","start","_this","figthing_remote_url","sys","localStorage","getItem","playGame","remoteUrl","httpUrlJson","loader","load","url","err","data","console","log","removeAllChildren","destroyAllChildren","init_postion","poition_my","biolgy_state","poition_enemy","addMapPic","fighting_list","boat","fighting_history","length","history","map_pic","httpUrl","texture","getComponent","Sprite","spriteFrame","SpriteFrame","postion","int_px","is_my","TOOLS","total","i","map","biology","tool","instantiate","initInfo","x","parseInt","y","biology_int","id","biology_name","name","push","addChild","arr","_this_hero_node","_targ_hero_node","spawn","moveTo","position","callFunc","scale","scaleBy","delayTime","act","sequence","runAction","bagBtn","gridLayout","parent","active","forEach","element","removeFromParent","hp_update","hp","fill","all_hp","hp_now","fillstart","act_shan","fadeTo","repeat","scheduleOnce","state","bind","reloadWord","httpPost","addWordMap","back_map","dynamicAtlasManager","reset","director","loadScene","back_home","addTouchEvent","node_1","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n// 世界操作  \r\nvar HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\nvar params =[];\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n            //测试item\r\n      //   content: {\r\n      //     default: null,\r\n      //     type: cc.Node\r\n      //   },\r\n\r\n      // person: {\r\n      //   default: null,\r\n      //   type: cc.Prefab\r\n      // },\r\n      // 根据TOOLS生成相应的道具\r\n      int_num:0,\r\n      toolsArray:[],\r\n      fightingArray:[],   \r\n      content: cc.Node,\r\n      person: cc.Prefab,\r\n      home: cc.Node,\r\n      reload: cc.Node,\r\n      back: cc.Node,\r\n      //列表\r\n      test_scrollView: {\r\n        default: null,\r\n        type: cc.ScrollView\r\n      },\r\n      //翻页容器\r\n      test_pageView: {\r\n        default: null,\r\n        type: cc.PageView\r\n      },\r\n\r\n    },\r\n    init(){\r\n    \r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     let person = cc.instantiate(this.person);\r\n        //     this.conten=person\r\n        //     // person.parent = this.content;\r\n        //     // this.addTouchEvent(person);  //添加触摸事件\r\n        //   }\r\n        // this.value_set = [];\r\n        // // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        // for(var i = 1; i <= 100; i ++) {\r\n        //     this.value_set.push(i);\r\n        // }\r\n        // this.content = this.scroll_view.content;\r\n        // this.opt_item_set = [];\r\n        // for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n        //     var item = cc.instantiate(this.item_prefab);\r\n        //     this.content.addChild(item);\r\n        //     this.opt_item_set.push(item);\r\n        // }\r\n      // httpRequest.playGameLoading()\r\n      // cc.dynamicAtlasManager.showDebug(true);\r\n\r\n        // this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n          // fighting_history\r\n\r\n        this.spawnTools()\r\n       this.home.opacity = 0;\r\n\r\n    },\r\n    start () {\r\n      // console.log(this.toolsArray[0])\r\n      // var _this =this;\r\n      // var fighting_list = cc.sys.localStorage.getItem(\"fightingArray\");\r\n      // var fighting_list = JSON.parse(fighting_list);\r\n      // for (let boat=0; boat<fighting_list.fighting_history.length; boat++) {\r\n      //     _this.fighting_history(fighting_list.fighting_history[boat].fighting_history)//执行战斗顺序\r\n      // }\r\n    },\r\n \r\n    spawnTools () {\r\n      var _this =this;\r\n      var figthing_remote_url = cc.sys.localStorage.getItem('figthing_remote_url'); //读取数据--战斗记录\r\n\r\n      if(figthing_remote_url==null){\r\n         httpRequest.playGame('map/诸天地图');\r\n      }else{\r\n        var remoteUrl = httpRequest.httpUrlJson(figthing_remote_url);\r\n        cc.loader.load({ url: remoteUrl }, function (err, data) {\r\n            console.log(data) \r\n            // _this.addWordMap(results) //生成生物\r\n            // _self.node.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture)\r\n            //移除节点\r\n            _this.content.removeAllChildren();\r\n            _this.content.destroyAllChildren();\r\n            // 初始化阵容\r\n            _this.init_postion(data.data.poition_my,data.data.biolgy_state,-50,1) //生成生物--position_my\r\n            _this.init_postion(data.data.poition_enemy,data.data.biolgy_state,50,0) //生成生物--position_ememy\r\n            _this.addMapPic(data) //生成地图\r\n            // _this.fightingArray.push(data.data);\r\n            // cc.sys.localStorage.setItem(\"fightingArray\", JSON.stringify(data.data));\r\n            // cc.sys.localStorage.setItem(\"toolsArray\", JSON.stringify(_this.toolsArray));\r\n            // var fighting_list = cc.sys.localStorage.getItem(\"fightingArray\");\r\n            // var fighting_list = JSON.parse(fighting_list);\r\n            console.log(_this.int_num)\r\n            if(_this.int_num==18){\r\n           \r\n              _this.home.opacity = 255;\r\n              var fighting_list =data.data;\r\n              // var poition_my =fighting_list.poition_my\r\n              // var poition_enemy =fighting_list.poition_enemy\r\n              for (let boat=0; boat<fighting_list.fighting_history.length; boat++) {\r\n                  var history =fighting_list.fighting_history[boat].fighting_history;\r\n                  _this.fighting_history(history)//执行战斗顺序\r\n              }\r\n            }\r\n        });    \r\n      }\r\n    },\r\n    //生成地图\r\n    addMapPic(data){\r\n        var _this = this;\r\n        var  map_pic =data.data['map_pic'];\r\n        var remoteUrl = httpRequest.httpUrl(map_pic);\r\n        // console.log(remoteUrl)\r\n        cc.loader.load({ url: remoteUrl }, function (err, texture) {  \r\n          _this.home.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    },\r\n    //生成生物\r\n    init_postion(postion,biolgy_state,int_px,is_my){\r\n        var _this = this;\r\n        let TOOLS = postion;\r\n        var total = postion.length;\r\n        // var fi = cc.fadeIn(2)//渐显效果\r\n        // _this.content.runAction(fi);\r\n        // var fo = cc.fadeOut(1)//渐隐效果\r\n        // _this.content.runAction(fo);\r\n          //先让透明度为0\r\n          // _this.content.opacity = 0;\r\n          // var fin = cc.fadeIn(5);\r\n          // _this.content.runAction(fin);\r\n\r\n        // let  tool = cc.instantiate(_this.person);\r\n        //添加节点\r\n        for (let i=0; i<total; i++) {\r\n            _this.int_num+=1;\r\n            //死亡移除map_status\r\n            var map =TOOLS[i];\r\n            // console.log(map) \r\n            if(map.biology.length!=0){\r\n              var tool = cc.instantiate(_this.person);\r\n              tool.getComponent('fightingTools').initInfo(map.biology,biolgy_state,is_my);\r\n              tool.x=parseInt(map.x+int_px)\r\n              tool.y=map.y\r\n              tool.biology_int=i //阵法编号\r\n              tool.biology=map.biology.id\r\n              tool.biology_name=map.biology.name\r\n              _this.toolsArray.push(tool);\r\n              // tool.setPosition(map.x,map.y);  \r\n              _this.content.addChild(tool); \r\n            }\r\n        }\r\n    },\r\n\r\n    fighting_history (history) {\r\n\r\n\r\n      var arr = [];\r\n      console.log(history)\r\n      // var _this = this;\r\n      var _this_hero_node =this.toolsArray[0];\r\n      var _targ_hero_node =this.toolsArray[1];\r\n      //切换成冲刺动画，并移动到目标跟前  \r\n      arr.push(cc.spawn(cc.moveTo(0.3,_targ_hero_node.position),cc.callFunc(function(){\r\n        // _this_hero_node.playAnim('/biology_pic/3关闭');\r\n        _targ_hero_node.scale = 1;\r\n        arr.push(cc.scaleBy(1,2));\r\n      },this)) );\r\n      //播放攻击动画\r\n      arr.push(cc.callFunc(function(){\r\n        // this.hero.playAnim(animName);\r\n      },this));\r\n      // var animInfo = AnimConfig.getRoleInfo(this.hero.roleId)[animName];\r\n      // var playTime = animInfo.frames / animInfo.fps;\r\n      //等待攻击完成\r\n      arr.push(cc.delayTime(0.5 + 2));\r\n      //移回原来位置\r\n      arr.push(cc.moveTo(0.1,_this_hero_node.position));\r\n      arr.push(cc.callFunc(function(){\r\n          // this._isSpelling = false;\r\n      },this));\r\n\r\n      var act = cc.sequence(arr);\r\n      _this_hero_node.runAction(act)\r\n \r\n \r\n\r\n\r\n\r\n      console.log(_this_hero_node)\r\n      // for (let i=0; i<fighting.length; i++) {\r\n        // let action =  cc.speed(cc.sequence(cc.moveTo(5,400,200), cc.moveTo(5,this_node.x,this_node.y)),10)\r\n        // let action = cc.moveTo(1, 100, 100)\r\n        // cc.jumpTo(3, 200, 200, 50, 5)\r\n        // 执行动作，所有的动作都需要一个目标通过 runAction 去执行它\r\n        // this_node.runAction(action)\r\n      // }\r\n        //   // 删除所有道具(或者不删，只是隐藏，自己决定)\r\n        //   for (let i=0; i<total; i++) {\r\n        //   this.toolsArray.forEach(element => {\r\n        //   //     var color = ['#FFFFFF','green','#BDFF00','#FFD100','#FF0000','#ffe000',];\r\n        //   //     // var type_color = color[info['yiXing']];\r\n        //   //     // console.log(info['color']);\r\n        //   //     element.getChildByName('生物').color = new cc.color(info['color']);\r\n        //   //     // console.log(info)\r\n        //   //     var star ='';    \r\n        //   //     for(i=0;i<=info['yiXing'];i++){\r\n        //   //         star +='⭐';\r\n        //   //     }\r\n        //   //     element.getChildByName('生命s').getComponent(cc.Label).string= info['shengMing']+'/'+info['shengMing'];\r\n        //   //     element.getChildByName('魔法s').getComponent(cc.Label).string= info['moFa']+'/'+info['moFa'];\r\n        //   //     element.getChildByName('生物名称s').getComponent(cc.Label).string= info['name'];\r\n        //   //     element.getChildByName('生物等级s').getComponent(cc.Label).string= 'Lv.'+info['grade']+'('+biolgy_state[info['state']]+')';\r\n        //   //     element.getChildByName('星星s').getComponent(cc.Label).string= star;\r\n        //   //     console.log(element)\r\n        //   //     // element.removeFromParent();\r\n        //   });\r\n        // }\r\n    },\r\n    bagBtn () {\r\n      // 背包按钮\r\n      if (this.gridLayout.parent.active) {\r\n          // 隐藏节点\r\n          this.gridLayout.parent.active = false;\r\n\r\n          // 删除所有道具(或者不删，只是隐藏，自己决定)\r\n          this.toolsArray.forEach(element => {\r\n              element.removeFromParent();\r\n          });\r\n      }\r\n      else {\r\n          // 显示节点\r\n          this.gridLayout.parent.active = true;\r\n\r\n          // 生成所有道具\r\n          this.spawnTools();\r\n      }\r\n    },\r\n    // 刷新血条\r\n    hp_update(){\r\n      //受到15伤害\r\n      this.hp -= 15;\r\n      // 求出伤害血量占比并显示\r\n      let fill = this.hp /this.all_hp;\r\n      this.hp_now.fillstart = 1 - fill; \r\n\r\n      // 血条延迟，秒执行一次，一共执行六次，延迟为0\r\n      // this.schedule(function(){\r\n      //     this.magnetnumber-=5/8;\r\n      // },1,6,0);\r\n\r\n      //0.5秒内闪烁\r\n      let act_shan = cc.sequence(cc .fadeTo(0.05,0),cc.fadeTo(0.05,255));\r\n      element.runAction(cc.repeat(act_shan,5));\r\n      //0.5秒后还可以被攻击\r\n        this.scheduleOnce(function() {\r\n          this.state = 0;\r\n        }.bind(this),0.5);\r\n    },\r\n    reloadWord(){\r\n      var _this =this;\r\n      httpRequest.httpPost('/app/app-apiword/map-word', params, function (data) {\r\n        //写入地图数据\r\n        _this.addWordMap(data)\r\n        })\r\n    },\r\n    back_map(){\r\n      //销毁动态合图\r\n      cc.dynamicAtlasManager.reset()\r\n      cc.director.loadScene('map/诸天地图');\r\n    },\r\n    back_home(){\r\n      //销毁动态合图\r\n      cc.dynamicAtlasManager.reset()\r\n      cc.director.loadScene('大厅');\r\n    },\r\n    addTouchEvent(node_1) {\r\n        node_1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        node_1.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n      },\r\n    // start: function() {\r\n    //     this.start_y = this.content.y;\r\n    //     this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n    //     this.load_record(this.start_index);\r\n    // },\r\n\r\n    // // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    // load_record: function(start_index) {\r\n    //     this.start_index = start_index;\r\n\r\n    //     for(var i = 0; i < this.PAGE_NUM * 3; i ++) {\r\n    //         var label = this.opt_item_set[i].getChildByName(\"src\").getComponent(cc.Label);\r\n    //         // 显示我们的记录;\r\n    //         label.string = this.value_set[start_index + i];\r\n    //     }\r\n    // },\r\n\r\n    // on_scroll_ended: function() {\r\n    //     this.scrollveiw_load_recode();\r\n    //     this.scroll_view.elastic = true;\r\n    // },\r\n\r\n    // scrollveiw_load_recode: function() {\r\n    //      // 向下加载了\r\n    //     if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n    //         this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n    //             return;\r\n    //         }\r\n\r\n    //         var down_loaded = this.PAGE_NUM;\r\n    //         this.start_index += down_loaded;\r\n    //         if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n    //             var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n    //             down_loaded -= (out_len);\r\n    //             this.start_index -= (out_len);\r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n\r\n    //         this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // 向上加载\r\n    //     if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n    //         if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n    //             this.scroll_view.elastic = false;\r\n    //             return;\r\n    //         }\r\n\r\n    //         var up_loaded = this.PAGE_NUM;\r\n    //         this.start_index -= up_loaded;\r\n    //         if (this.start_index < 0) {\r\n    //             up_loaded += this.start_index;\r\n    //             this.start_index = 0; \r\n    //         }\r\n    //         this.load_record(this.start_index);\r\n    //         this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n    //     }\r\n    //     // end \r\n    // },\r\n    // // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    //     this.scrollveiw_load_recode();\r\n    // },\r\n});\r\n"]}
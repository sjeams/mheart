{"version":3,"sources":["assets\\Script\\背包\\biology_iconTools.js"],"names":["cc","Class","Component","properties","biology_detail_alert","TipBoxPrefab_model","info_list","http_globalData","biology","getChildByName","removeAllChildren","_this","TipBoxPrefab","instantiate","http_globalAsset","model_home_biology_detail_heard","getComponent","Label","string","length","biology_detail_list","addChild","TOOLS","prop","info","TipBoxPrefab_icon","model_home_biology_detail_heard_icon","Sprite","spriteFrame","http_base_asset_biology","picture","name","grade","bindClickEventIcon","find","scorllheight","parent","cellHeight","height","Math","ceil","setContentSize","on","biology_id","children","indexOf"],"mappings":"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","sourceRoot":"/","sourcesContent":["// require(\"../common\"); \r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    //技能图片渲染\r\n    biology_detail_alert(TipBoxPrefab_model){\r\n        var info_list = http_globalData.biology\r\n        //尽量先关闭所有弹窗\r\n        TipBoxPrefab_model.getChildByName('左边弹窗').removeAllChildren();\r\n        TipBoxPrefab_model.getChildByName('中间弹窗').removeAllChildren();\r\n        TipBoxPrefab_model.getChildByName('右边弹窗').removeAllChildren();\r\n\r\n        var _this=this;\r\n        // cc.loader.loadRes('/model背包/生物头像', function(errorMessage,loadedResource_icon){\r\n            //检查资源加载\r\n            // if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n            // if( !(loadedResource_icon instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n            //开始实例化预制资源\r\n            let   TipBoxPrefab =  cc.instantiate(http_globalAsset.model_home_biology_detail_heard);\r\n            //技能等级\r\n            TipBoxPrefab.getChildByName('生物数量s').getComponent(cc.Label).string='生物('+info_list.length+'/60)'\r\n            // 由于加载资源的操作是异步的，如果在加载完成前就绑定了事件，有可能会触发事件的自动执行。\r\n            _this.biology_detail_list(TipBoxPrefab_model,TipBoxPrefab,info_list)\r\n            //写入icon\r\n            TipBoxPrefab_model.getChildByName('生物头像').addChild(TipBoxPrefab);\r\n            // return TipBoxPrefab_model\r\n        // })\r\n        // return TipBoxPrefab_model\r\n    },\r\n\r\n    //技能图片渲染\r\n    biology_detail_list(TipBoxPrefab_model,TipBoxPrefab,info_list){\r\n        var _this =this;\r\n        var TOOLS =[];\r\n        var TOOLS = info_list;\r\n        // var TipBoxPrefab_icon=[];\r\n\r\n            // let image = '/技能图标/'+skill.image;\r\n            //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n            // cc.loader.loadRes('/model背包/图标生物', function(errorMessage,loadedResource_icon){\r\n            for (var prop in info_list) {\r\n                let info = TOOLS[prop];\r\n                // //检查资源加载\r\n                // if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n                // if( !(loadedResource_icon instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n                //开始实例化预制资源\r\n                let   TipBoxPrefab_icon =  cc.instantiate(http_globalAsset.model_home_biology_detail_heard_icon);\r\n                //载入技能图片\r\n                // let image = info.picture;\r\n                // cc.loader.loadRes(image, cc.SpriteFrame, function (err, texture) { \r\n                //     if (err) {\r\n                //         // cc.error(err.message || err);\r\n                //         return;\r\n                //     }\r\n                    TipBoxPrefab_icon.getChildByName('P头像').getComponent(cc.Sprite).spriteFrame =   http_globalAsset.http_base_asset_biology[info.picture]\r\n                // });\r\n                //技能等级\r\n                TipBoxPrefab_icon.getChildByName('生物名称s').getComponent(cc.Label).string=info.name\r\n                TipBoxPrefab_icon.getChildByName('生物等级s').getComponent(cc.Label).string='等级'+info.grade\r\n                // 由于加载资源的操作是异步的，如果在加载完成前就绑定了事件，有可能会触发事件的自动执行。\r\n                //绑定按钮事件\r\n                _this.bindClickEventIcon(TipBoxPrefab_model,TipBoxPrefab_icon);\r\n                //写入icon\r\n                cc.find(\"列表/content/gridLayout\",TipBoxPrefab).addChild(TipBoxPrefab_icon);\r\n\r\n            }\r\n        // })\r\n    \r\n        // 定义content滚动条高度\r\n        let scorllheight =  cc.find(\"列表/content/gridLayout\",TipBoxPrefab).parent;\r\n        //滚动高度= 预制体100*个数+ 上下 预留10 的位置\r\n\r\n        let cellHeight =  cc.find(\"列表/content/gridLayout\",TipBoxPrefab).height * 0.2;\r\n        let  height =  cellHeight*( Math.ceil(info_list.length))+20;;\r\n        if(height<=500){\r\n            let height = 500\r\n        }\r\n        scorllheight.setContentSize(500,height)\r\n        return TipBoxPrefab\r\n    },\r\n    // 绑定按钮事件---挂载生物详情\r\n    bindClickEventIcon: function (TipBoxPrefab_model,TipBoxPrefab_icon) {\r\n        // 由于加载资源的操作是异步的，如果在加载完成前就绑定了事件，有可能会触发事件的自动执行。\r\n        // 此处进行事件绑定\r\n        TipBoxPrefab_icon.on('click', function () {\r\n           \r\n            //当前选中的生物序号 index---定义全局变量\r\n            http_globalData.biology_id = TipBoxPrefab_icon.parent.children.indexOf(TipBoxPrefab_icon);\r\n            // 事件处理逻辑\r\n            //移除挂载\r\n            TipBoxPrefab_model.getChildByName('生物详情').removeAllChildren();\r\n            //重新挂载\r\n            TipBoxPrefab_model.getComponent('biology_infoTools').biology_detail_alert(TipBoxPrefab_model)\r\n            // 切换默认挂载信息列表\r\n\r\n            // _this.bindClickEventIcon(TipBoxPrefab_icon.getComponent(cc.Button),info,TipBoxPrefab_model);\r\n        }, this);\r\n \r\n\r\n        //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n\r\n        // 销毁所有弹窗--节点\r\n        // TipBoxPrefab.getChildByName('技能描述').removeAllChildren();\r\n\r\n        // let move_type= ['初始化','回合化','被击前触发','被击后触发','攻击前触发','主动','攻击后']\r\n        // cc.loader.loadRes('/弹窗模型/biology_生物_战斗技能提示', function(errorMessage,loadedResource){\r\n        //     //检查资源加载\r\n        //     if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n        //     if( !(loadedResource instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n        //     //开始实例化预制资源\r\n        //     let tips_Prefab = cc.instantiate(loadedResource);\r\n        //     tips_Prefab.getChildByName('D技能图标').getComponent(cc.Sprite).spriteFrame = TipBoxPrefab_icon.getChildByName('P技能').getComponent(cc.Sprite).spriteFrame\r\n        //     tips_Prefab.getChildByName('D技能名称s').getComponent(cc.Label).string=skill.name+'-['+skill.type+']'\r\n        //     tips_Prefab.getChildByName('D技能消耗s').getComponent(cc.Label).string='消耗:   '+Math.abs(skill.needValue)\r\n        //     var attack=skill.attack==0?'被动':'主动'\r\n        //     tips_Prefab.getChildByName('D技能类型s').getComponent(cc.Label).string='触发: '+attack\r\n        //     var star ='';    \r\n        //     for(var i=0;i<=skill['type'];i++){\r\n        //         star +='☆';\r\n        //     }\r\n        //     tips_Prefab.getChildByName('D技能星级s').getComponent(cc.Label).string='稀有程度：'+star\r\n        //     var hurtType=skill.hurtType==1?'物理':'法术'\r\n        //     tips_Prefab.getChildByName('D技能攻击s').getComponent(cc.Label).string='攻击类型: '+hurtType\r\n        //     tips_Prefab.getChildByName('D技能触发s').getComponent(cc.Label).string='触发几率：'+skill.probability+'%'\r\n        //     tips_Prefab.getChildByName('D发动时机s').getComponent(cc.Label).string='攻击类型: '+move_type[skill.belong]\r\n        //     tips_Prefab.getChildByName('D技能来源s').getComponent(cc.Label).string='技能来源：'+skill.words \r\n        //     tips_Prefab.getChildByName('D技能描述s').getComponent(cc.Label).string='技能说明：'+skill.describe\r\n\r\n        //     //载入生物详情\r\n        //     TipBoxPrefab.getChildByName('技能描述').addChild(tips_Prefab);\r\n\r\n        // });\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}
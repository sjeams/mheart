{"version":3,"sources":["assets\\Script\\战斗\\skill_iconTools.js"],"names":["cc","Class","Component","properties","start","biology_detail_skill","TipBoxPrefab","position_skill","_this","TOOLS","skill","prop","TipBoxPrefab_icon","instantiate","http_globalAsset","model_biology_SkillIcon","log","http_base_asset_skill","getChildByName","getComponent","Sprite","spriteFrame","image","Label","string","type","on","bindClickEventIcon","Button","addChild","button","removeAllChildren","move_type","tips_Prefab","model_biology_SkillTips","name","Math","abs","needValue","attack","star","i","hurtType","probability","belong","words","describe"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n    //技能图片渲染\r\n    biology_detail_skill(TipBoxPrefab,position_skill){\r\n        var _this =this;\r\n        var TOOLS =[];\r\n        var TOOLS = position_skill;\r\n        //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n        // cc.loader.loadRes('/model弹窗/biology_生物_技能图标', function(errorMessage,loadedResource_icon){\r\n              \r\n                for (var prop in position_skill) {\r\n                    let skill = TOOLS[prop];\r\n                //检查资源加载\r\n                // if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n                // if( !(loadedResource_icon instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n                //开始实例化预制资源\r\n                let   TipBoxPrefab_icon =  cc.instantiate(http_globalAsset.model_biology_SkillIcon);\r\n                //载入技能图片\r\n                // let image = '/图标技能/'+skill.image;\r\n                // cc.log(image)\r\n                // cc.loader.loadRes(image, cc.SpriteFrame, function (err, texture) { \r\n                //     if (err) {\r\n                //         // cc.error(err.message || err);\r\n                //         return;\r\n                //     }\r\n                    // 图标技能\r\n                    cc.log(http_globalAsset.http_base_asset_skill)\r\n                    TipBoxPrefab_icon.getChildByName('P技能').getComponent(cc.Sprite).spriteFrame = http_globalAsset.http_base_asset_skill[skill.image]\r\n                // });\r\n                //技能等级\r\n                TipBoxPrefab_icon.getChildByName('技能s').getComponent(cc.Label).string=skill.type\r\n\r\n                // 由于加载资源的操作是异步的，如果在加载完成前就绑定了事件，有可能会触发事件的自动执行。\r\n                // 此处进行事件绑定\r\n                TipBoxPrefab_icon.on('click', function () {\r\n                    // 事件处理逻辑\r\n                    _this.bindClickEventIcon(TipBoxPrefab_icon.getComponent(cc.Button), skill,TipBoxPrefab,TipBoxPrefab_icon);\r\n                }, this);\r\n\r\n                //写入icon\r\n                TipBoxPrefab.getChildByName('技能列表').addChild(TipBoxPrefab_icon);\r\n            }\r\n        // })\r\n        return TipBoxPrefab\r\n    },\r\n    // 绑定按钮事件\r\n    bindClickEventIcon: function (button, skill,TipBoxPrefab,TipBoxPrefab_icon) {\r\n        // cc.log(skill)\r\n        //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n\r\n        // 销毁所有弹窗--节点\r\n        TipBoxPrefab.getChildByName('技能描述').removeAllChildren();\r\n\r\n        let move_type= ['初始化','回合化','被击前触发','被击后触发','攻击前触发','主动','攻击后']\r\n        // cc.loader.loadRes('/model弹窗/biology_生物_战斗技能提示', function(errorMessage,loadedResource){\r\n        //     //检查资源加载\r\n        //     if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n        //     if( !(loadedResource instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n            //开始实例化预制资源\r\n            let tips_Prefab = cc.instantiate(http_globalAsset.model_biology_SkillTips);\r\n            tips_Prefab.getChildByName('D技能图标').getComponent(cc.Sprite).spriteFrame  =  http_globalAsset.http_base_asset_skill[skill.image]\r\n            tips_Prefab.getChildByName('D技能名称s').getComponent(cc.Label).string=skill.name+'-['+skill.type+']'\r\n            tips_Prefab.getChildByName('D技能消耗s').getComponent(cc.Label).string='消耗：'+Math.abs(skill.needValue)\r\n            var attack=skill.attack==0?'被动':'主动'\r\n            tips_Prefab.getChildByName('D技能类型s').getComponent(cc.Label).string='触发: '+attack\r\n            var star ='';    \r\n            for(var i=0;i<=skill['type'];i++){\r\n                star +='☆';\r\n            }\r\n            tips_Prefab.getChildByName('D技能星级s').getComponent(cc.Label).string='稀有程度：'+star\r\n            var hurtType=skill.hurtType==1?'物理':'法术'\r\n            tips_Prefab.getChildByName('D技能攻击s').getComponent(cc.Label).string='攻击类型: '+hurtType\r\n            tips_Prefab.getChildByName('D技能触发s').getComponent(cc.Label).string='触发几率：'+skill.probability+'%'\r\n            tips_Prefab.getChildByName('D发动时机s').getComponent(cc.Label).string='攻击类型: '+move_type[skill.belong]\r\n            tips_Prefab.getChildByName('D技能来源s').getComponent(cc.Label).string='技能来源：'+skill.words \r\n            tips_Prefab.getChildByName('D技能描述s').getComponent(cc.Label).string='技能说明：'+skill.describe\r\n            //载入生物详情\r\n            TipBoxPrefab.getChildByName('技能描述').addChild(tips_Prefab);\r\n\r\n        // });\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}
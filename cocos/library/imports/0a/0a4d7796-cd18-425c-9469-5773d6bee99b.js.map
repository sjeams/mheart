{"version":3,"sources":["assets\\Script\\阵法\\bag_zhenfa布阵Tools.js"],"names":["HttpHelper","require","httpRequest","cc","Class","Component","properties","biology_buzhen_list","TipBoxPrefab_model","TipBoxPrefab","_this","loader","loadRes","errorMessage","loadedResource_icon","prop","globalData","zhenfa","key","TipBoxPrefab_icon","instantiate","biology_buzhen_detail","bindClickRemove","getChildByName","addChild","biology_id","info","biology","active","image","picture","SpriteFrame","err","texture","getComponent","Sprite","spriteFrame","bind_button_detail","Label","string","name","log","biologyClickRemove","biology_detail_tips","zhenfa_id","parent","children","indexOf","is_chuzhan","on"],"mappings":"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","sourceRoot":"/","sourcesContent":["var HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //技能图片渲染\r\n    biology_buzhen_list(TipBoxPrefab_model,TipBoxPrefab){\r\n        // var biology = cc.globalData.zhenfa\r\n        //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n        var _this =this;\r\n        cc.loader.loadRes('/model布阵/图标阵法', function(errorMessage,loadedResource_icon){\r\n            for (var prop in cc.globalData.zhenfa) {\r\n                var key = cc.globalData.zhenfa[prop];\r\n                //开始实例化预制资源\r\n                var   TipBoxPrefab_icon =  cc.instantiate(loadedResource_icon)\r\n                //写入详情\r\n                _this.biology_buzhen_detail(TipBoxPrefab_model,TipBoxPrefab,TipBoxPrefab_icon,key) \r\n                // 由于加载资源的操作是异步的，如果在加载完成前就绑定了事件，有可能会触发事件的自动执行。\r\n                // 此处进行事件绑定\r\n                // 事件处理逻辑\r\n                _this.bindClickRemove(TipBoxPrefab_model,TipBoxPrefab_icon);\r\n                TipBoxPrefab.getChildByName('阵法详情').addChild(TipBoxPrefab_icon);\r\n            }\r\n        })\r\n    },\r\n \r\n    biology_buzhen_detail(TipBoxPrefab_model,TipBoxPrefab,TipBoxPrefab_icon,key){\r\n\r\n        var biology_id = cc.globalData.zhenfa[key]\r\n        if(biology_id!=null){\r\n            var info = cc.globalData.biology[biology_id] \r\n            TipBoxPrefab_icon.getChildByName('生物').active=true\r\n            // //载入技能图片\r\n            let image = info.picture;\r\n            cc.loader.loadRes(image, cc.SpriteFrame, function (err, texture) { \r\n                if (err) {\r\n                    // cc.error(err.message || err);\r\n                    return;\r\n                }\r\n                TipBoxPrefab_icon.getChildByName('生物').getComponent(cc.Sprite).spriteFrame = texture; \r\n                //拖拽逻辑\r\n                TipBoxPrefab_model.getComponent('bag_zhenfa头像Tools').bind_button_detail(TipBoxPrefab_model,TipBoxPrefab,TipBoxPrefab_icon,texture)\r\n            });\r\n            //技能等级\r\n            TipBoxPrefab_icon.getChildByName('名称s').getComponent(cc.Label).string=info.name\r\n        }else{\r\n\r\n            cc.log(TipBoxPrefab_icon)\r\n            TipBoxPrefab_icon.getChildByName('生物').active=false\r\n            TipBoxPrefab_icon.getChildByName('名称s').getComponent(cc.Label).string=''\r\n        }\r\n    },\r\n\r\n    biologyClickRemove(TipBoxPrefab_model,TipBoxPrefab_icon) {\r\n        TipBoxPrefab_icon.getChildByName('生物').active=false\r\n        TipBoxPrefab_icon.getChildByName('名称s').getComponent(cc.Label).string=''\r\n        TipBoxPrefab_model.getComponent('bag_zhenfaTools').biology_detail_tips(TipBoxPrefab_model,'操作成功!')\r\n        var zhenfa_id = TipBoxPrefab_icon.parent.children.indexOf(TipBoxPrefab_icon) //阵法的序号key\r\n        var biology_id = cc.globalData.zhenfa[zhenfa_id] //生物id biology_id\r\n        //移出阵法\r\n        cc.globalData.zhenfa[zhenfa_id] =null\r\n        cc.globalData.biology[biology_id].is_chuzhan=0\r\n        cc.log(biology_id)\r\n    },\r\n\r\n    // 绑定按钮事件\r\n    bindClickRemove(TipBoxPrefab_model,TipBoxPrefab_icon) {\r\n        var _this =this;\r\n        TipBoxPrefab_icon.on('click', function () {\r\n            _this.biologyClickRemove(TipBoxPrefab_model,TipBoxPrefab_icon);\r\n        }, this);\r\n        //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n\r\n        // 销毁所有弹窗--节点\r\n        // TipBoxPrefab_model.getChildByName('中间弹窗').removeAllChildren();\r\n\r\n        // let move_type= ['初始化','回合化','被击前触发','被击后触发','攻击前触发','主动','攻击后']\r\n        // cc.loader.loadRes('/model弹窗/biology_生物_战斗技能提示', function(errorMessage,loadedResource){\r\n        //     //检查资源加载\r\n        //     //开始实例化预制资源\r\n        //     let tips_Prefab = cc.instantiate(loadedResource);\r\n        //     tips_Prefab.getChildByName('D技能图标').getComponent(cc.Sprite).spriteFrame = TipBoxPrefab_icon.getChildByName('P技能').getComponent(cc.Sprite).spriteFrame\r\n        //     tips_Prefab.getChildByName('D技能名称s').getComponent(cc.Label).string=skill.name+'-['+skill.type+']'\r\n        //     tips_Prefab.getChildByName('D技能消耗s').getComponent(cc.Label).string='消耗：'+Math.abs(skill.needValue)\r\n        //     var attack=skill.attack==0?'被动':'主动'\r\n        //     tips_Prefab.getChildByName('D技能类型s').getComponent(cc.Label).string='触发: '+attack\r\n        //     var star ='';    \r\n        //     for(var i=0;i<=skill['type'];i++){\r\n        //         star +='☆';\r\n        //     }\r\n        //     tips_Prefab.getChildByName('D技能星级s').getComponent(cc.Label).string='稀有程度：'+star\r\n        //     var hurtType=skill.hurtType==1?'物理':'法术'\r\n        //     tips_Prefab.getChildByName('D技能攻击s').getComponent(cc.Label).string='攻击类型: '+hurtType\r\n        //     tips_Prefab.getChildByName('D技能触发s').getComponent(cc.Label).string='触发几率：'+skill.probability+'%'\r\n        //     tips_Prefab.getChildByName('D发动时机s').getComponent(cc.Label).string='攻击类型: '+move_type[skill.belong]\r\n        //     tips_Prefab.getChildByName('D技能来源s').getComponent(cc.Label).string='技能来源：'+skill.words \r\n        //     tips_Prefab.getChildByName('D技能描述s').getComponent(cc.Label).string='技能说明：'+skill.describe\r\n\r\n        //     //载入生物详情\r\n        //     TipBoxPrefab_model.getChildByName('中间弹窗').addChild(tips_Prefab);\r\n        // });\r\n    },\r\n \r\n});\r\n"]}
{"version":3,"sources":["assets\\Script\\fighting\\score_fighting_alert.js"],"names":["HttpHelper","require","httpRequest","params","cc","Class","Component","properties","toolsArray","init","director","getScene","onLoad","start","update","dt","reloadWord","_this","httpPost","data","addWordMap","back_map","playGame","urlConfig","back_reload","back_home","back_time_show","unscheduleAllCallbacks","find","active","back_time_hidden","show_dlg","node","hidden_dlg","remove_alert","removeAllChildren","remove_skill","getChildByName"],"mappings":";;;;;;AAAA;;;;;AAKA;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAIC,WAAW,GAAG,IAAIF,UAAJ,EAAlB;AACA,IAAIG,MAAM,GAAE,EAAZ;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,UAAU,EAAC;AAFD,GAHP;AAQLC,EAAAA,IARK,kBAQC;AACJL,IAAAA,EAAE,CAACM,QAAH,CAAYC,QAAZ,GADI,CACmB;AACxB,GAVI;AAWL;AACAC,EAAAA,MAZK,oBAYK,CACR;AAED,GAfI;AAgBLC,EAAAA,KAhBK,mBAgBI,CACR,CAjBI;AAkBLC,EAAAA,MAlBK,kBAkBGC,EAlBH,EAkBO,CACV;AACD,GApBI;AAsBLC,EAAAA,UAtBK,wBAsBO;AACV,QAAIC,KAAK,GAAE,IAAX;;AACAf,IAAAA,WAAW,CAACgB,QAAZ,CAAqB,2BAArB,EAAkDf,MAAlD,EAA0D,UAAUgB,IAAV,EAAgB;AACxE;AACAF,MAAAA,KAAK,CAACG,UAAN,CAAiBD,IAAjB;AACC,KAHH;AAID,GA5BI;AA6BLE,EAAAA,QA7BK,sBA6BK;AACR;AACA;AACAnB,IAAAA,WAAW,CAACoB,QAAZ,CAAqBpB,WAAW,CAACqB,SAAZ,CAAsB,YAAtB,CAArB;AACD,GAjCI;AAkCLC,EAAAA,WAlCK,yBAkCQ,CACX;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAlDI;AAsDLC,EAAAA,SAtDK,uBAsDM;AACTvB,IAAAA,WAAW,CAACoB,QAAZ,CAAqBpB,WAAW,CAACqB,SAAZ,CAAsB,cAAtB,CAArB;AACD,GAxDI;AAyDL;AACAG,EAAAA,cA1DK,4BA0DW;AACd,SAAKC,sBAAL,GADc,CACgB;;AAC9BvB,IAAAA,EAAE,CAACwB,IAAH,CAAQ,WAAR,EAAqBC,MAArB,GAA6B,IAA7B;AACD,GA7DI;AA8DLC,EAAAA,gBA9DK,8BA8Da;AAChB1B,IAAAA,EAAE,CAACwB,IAAH,CAAQ,WAAR,EAAqBC,MAArB,GAA6B,KAA7B;AACD,GAhEI;AAiELE,EAAAA,QAjEK,sBAiEO;AACR,SAAKC,IAAL,CAAUH,MAAV,GAAkB,IAAlB;AACH,GAnEI;AAqELI,EAAAA,UArEK,wBAqES;AACV,SAAKD,IAAL,CAAUH,MAAV,GAAkB,KAAlB;AAEH,GAxEI;AAyELK,EAAAA,YAzEK,0BAyES;AACZ;AACA9B,IAAAA,EAAE,CAACwB,IAAH,CAAQ,WAAR,EAAqBO,iBAArB,GAFY,CAGZ;AACD,GA7EI;AA+ELC,EAAAA,YA/EK,0BA+ES;AACZ;AACA,SAAKJ,IAAL,CAAUK,cAAV,CAAyB,MAAzB,EAAiCF,iBAAjC,GAFY,CAGZ;AACD;AAnFI,CAAT,GA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourceRoot":"/","sourcesContent":["/*\r\n * @Author: sjeam\r\n * @Date: 2024-01-05 16:13:51\r\n * @Description: \r\n */\r\n// 世界操作  \r\nvar HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\nvar params =[];\r\ncc.Class({\r\n    extends: cc.Component,\r\n \r\n    properties: {\r\n      // 根据TOOLS生成相应的道具\r\n      toolsArray:[],\r\n   \r\n    },\r\n    init(){\r\n      cc.director.getScene();//获取当前场景\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n      // this.spawnTools()\r\n      \r\n    },\r\n    start () {\r\n    },\r\n    update (dt) {\r\n      // console.log(3333)\r\n    },\r\n    \r\n    reloadWord(){\r\n      var _this =this;\r\n      httpRequest.httpPost('/app/app-apiword/map-word', params, function (data) {\r\n        //写入地图数据\r\n        _this.addWordMap(data)\r\n        })\r\n    },\r\n    back_map(){\r\n      //销毁动态合图\r\n      // cc.dynamicAtlasManager.reset()\r\n      httpRequest.playGame(httpRequest.urlConfig(\"sence_ditu\"));\r\n    },\r\n    back_reload(){\r\n      // this.parent.active=false\r\n      // httpRequest.playGame(httpRequest.urlConfig(\"sence_zhandou\"));\r\n      // cc.find('Canvas/重播').click()\r\n      // cc.find('Canvas/重播', this.node).on('touchstart', this.onButtonClick, this);\r\n      //这个 node 节点是你的事件处理代码组件所属的节点\r\n \r\n      // var clickEventHandler = new cc.Component.EventHandler();\r\n      // //这个 node 节点是你的事件处理代码组件所属的节点\r\n      // clickEventHandler.target =  cc.find('Canvas/重播'); \r\n      // //这个是代码文件名\r\n      // clickEventHandler.component = \"CircleBoard\";\r\n      // clickEventHandler.handler = \"callback\";\r\n      // // clickEventHandler.customEventData = index;\r\n      // button.clickEvents.push(clickEventHandler);\r\n \r\n    },\r\n \r\n       \r\n\r\n    back_home(){\r\n      httpRequest.playGame(httpRequest.urlConfig(\"sence_dating\"));\r\n    },\r\n    //跳过回合\r\n    back_time_show(){ \r\n      this.unscheduleAllCallbacks();//停止某组件的所有计时器\r\n      cc.find('Canvas/结算').active =true;\r\n    },\r\n    back_time_hidden(){\r\n      cc.find('Canvas/结算').active =false;\r\n    },\r\n    show_dlg () {\r\n        this.node.active =true;\r\n    },\r\n\r\n    hidden_dlg () {\r\n        this.node.active =false;\r\n        \r\n    },\r\n    remove_alert(){\r\n      // 销毁所有弹窗\r\n      cc.find('Canvas/弹窗').removeAllChildren();\r\n      // cc.find('Canvas/弹窗').destroyAllChildren();\r\n    },\r\n\r\n    remove_skill(){\r\n      // 销毁所有弹窗\r\n      this.node.getChildByName('技能描述').removeAllChildren();\r\n      // cc.find('Canvas/弹窗').destroyAllChildren();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//游戏背包  点击事件\r\n// initBoard: function () {\r\n//   for (let i = 0; i < this.node.children.length; i++) {\r\n//       let node = this.node.children[I];\r\n//       this.bindClickEvent(node.getComponent(cc.Button), i);\r\n//   }\r\n// },\r\n\r\n// bindClickEvent: function (button, index) {\r\n//   var clickEventHandler = new cc.Component.EventHandler();\r\n//   //这个 node 节点是你的事件处理代码组件所属的节点\r\n//   clickEventHandler.target = this.node; \r\n//   //这个是代码文件名\r\n//   clickEventHandler.component = \"CircleBoard\";\r\n//   clickEventHandler.handler = \"callback\";\r\n//   clickEventHandler.customEventData = index;\r\n//   button.clickEvents.push(clickEventHandler);\r\n// },\r\n\r\n// //点击事件回调 target ==》node， customEventData ==》 index\r\n// callback: function (target, customEventData) {\r\n//   this.nodeList[customEventData].getComponent(\"Circle\").updateCircle();\r\n// },"]}
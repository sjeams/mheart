{"version":3,"sources":["assets\\Script\\战斗\\score_fighting_alert.js"],"names":["require","cc","Class","Component","properties","toolsArray","init","director","getScene","onLoad","start","update","dt","reloadWord","_this","httpRequest","httpPost","data","addWordMap","back_map","playGame","back_reload","button_beishu","http_globalData","user_info","beishu","parseInt","httpRequestBagApi","http_user_beishu_update","find","getComponent","Label","string","back_home","back_time_show","active","back_time_hidden","show_dlg","node","hidden_dlg","remove_alert","removeAllChildren","remove_skill","getChildByName"],"mappings":"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","sourceRoot":"/","sourcesContent":["require(\"../common\"); \r\ncc.Class({\r\n    extends: cc.Component,\r\n \r\n    properties: {\r\n      // 根据TOOLS生成相应的道具\r\n      toolsArray:[],\r\n   \r\n    },\r\n    init(){\r\n      cc.director.getScene();//获取当前场景\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n      // this.spawnTools()\r\n      \r\n    },\r\n    start () {\r\n    },\r\n    update (dt) {\r\n      // console.log(3333)\r\n    },\r\n    \r\n    reloadWord(){\r\n      var _this =this;\r\n      httpRequest.httpPost('/app/app-apiword/map-word', {}, function (data) {\r\n        //写入地图数据\r\n        _this.addWordMap(data)\r\n        })\r\n    },\r\n    back_map(){\r\n      //销毁动态合图\r\n      // cc.dynamicAtlasManager.reset()\r\n      httpRequest.playGame(\"sence_ditu\")\r\n    },\r\n    back_reload(){\r\n      // this.parent.active=false\r\n      // httpRequest.playGame(\"sence_zhandou\") \r\n      // cc.find('Canvas/重播').click()\r\n      // cc.find('Canvas/重播', this.node).on('touchstart', this.onButtonClick, this);\r\n      //这个 node 节点是你的事件处理代码组件所属的节点\r\n \r\n      // var clickEventHandler = new cc.Component.EventHandler();\r\n      // //这个 node 节点是你的事件处理代码组件所属的节点\r\n      // clickEventHandler.target =  cc.find('Canvas/重播'); \r\n      // //这个是代码文件名\r\n      // clickEventHandler.component = \"CircleBoard\";\r\n      // clickEventHandler.handler = \"callback\";\r\n      // // clickEventHandler.customEventData = index;\r\n      // button.clickEvents.push(clickEventHandler);\r\n \r\n    }, \r\n    async button_beishu(){\r\n      // var beisu_arr =[1,2,3,4,8];\r\n      if(http_globalData.user_info.beishu<4){\r\n        http_globalData.user_info.beishu = parseInt(http_globalData.user_info.beishu)+1\r\n      }else{\r\n        http_globalData.user_info.beishu=1\r\n      }\r\n      //修改倍数\r\n      await httpRequestBagApi.http_user_beishu_update()\r\n      // http_globalData.user_info.beishu\r\n      cc.find('Canvas/倍数/倍数s').getComponent(cc.Label).string = http_globalData.user_info.beishu;\r\n    },\r\n    back_home(){\r\n      httpRequest.playGame(\"sence_dating\")\r\n    },\r\n    //跳过回合\r\n    back_time_show(){ \r\n      // this.unscheduleAllCallbacks();//停止某组件的所有计时器\r\n      cc.find('Canvas/结算').active =true;\r\n    },\r\n    back_time_hidden(){\r\n      cc.find('Canvas/结算').active =false;\r\n    },\r\n    show_dlg () {\r\n        this.node.active =true;\r\n    },\r\n\r\n    hidden_dlg () {\r\n        this.node.active =false;\r\n        \r\n    },\r\n    remove_alert(){\r\n      // 销毁所有弹窗\r\n      cc.find('Canvas/弹窗').removeAllChildren();\r\n      // cc.find('Canvas/弹窗').destroyAllChildren();\r\n    },\r\n\r\n    remove_skill(){\r\n      // 销毁所有弹窗\r\n      this.node.getChildByName('技能描述').removeAllChildren();\r\n      // cc.find('Canvas/弹窗').destroyAllChildren();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//游戏背包  点击事件\r\n// initBoard: function () {\r\n//   for (let i = 0; i < this.node.children.length; i++) {\r\n//       let node = this.node.children[I];\r\n//       this.bindClickEvent(node.getComponent(cc.Button), i);\r\n//   }\r\n// },\r\n\r\n// bindClickEvent: function (button, index) {\r\n//   var clickEventHandler = new cc.Component.EventHandler();\r\n//   //这个 node 节点是你的事件处理代码组件所属的节点\r\n//   clickEventHandler.target = this.node; \r\n//   //这个是代码文件名\r\n//   clickEventHandler.component = \"CircleBoard\";\r\n//   clickEventHandler.handler = \"callback\";\r\n//   clickEventHandler.customEventData = index;\r\n//   button.clickEvents.push(clickEventHandler);\r\n// },\r\n\r\n// //点击事件回调 target ==》node， customEventData ==》 index\r\n// callback: function (target, customEventData) {\r\n//   this.nodeList[customEventData].getComponent(\"Circle\").updateCircle();\r\n// },"]}
{"version":3,"sources":["assets\\Script\\scence\\mapTools.js"],"names":["HttpHelper","require","httpRequest","cc","Class","Component","properties","biology_detail_list","TipBoxPrefab_model","info_list","_this","TOOLS","loader","loadRes","errorMessage","loadedResource_icon","log","Prefab","TipBoxPrefab_icon","instantiate","map","prop","info","biology_list","total","length","map_status","x","y","image","httpUrl","picture","load","url","err","texture","getChildByName","getComponent","Sprite","spriteFrame","SpriteFrame","color","type_color","star","i","Label","string","onConfirBtn","map_int","addChild","on","sys","localStorage","setItem","JSON","stringify","playGame","urlConfig"],"mappings":"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","sourceRoot":"/","sourcesContent":["var HttpHelper = require(\"../http\"); \r\nvar httpRequest = new HttpHelper();\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // server_picture: cc.Node,\r\n        // server_type: cc.Node,\r\n        // server_name: cc.Node,\r\n        // server_star: cc.Node,\r\n        // sprite_server_login: cc.Button\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //技能图片渲染\r\n    biology_detail_list(TipBoxPrefab_model,info_list){\r\n        var _this =this;\r\n        var TOOLS =[];\r\n        var TOOLS = info_list;\r\n        // var TipBoxPrefab_icon=[];\r\n            // let image = '/技能图标/'+skill.image;\r\n            //加载预制资源 PrefabUrl为 预制资源在 资源中的路径\r\n            cc.loader.loadRes('/fighting/sprite_地图', function(errorMessage,loadedResource_icon){\r\n                //检查资源加载\r\n                if( errorMessage ) { cc.log( '载入预制资源失败, 原因:' + errorMessage ); return; }\r\n                if( !(loadedResource_icon instanceof cc.Prefab ) ) { cc.log( '你载入的不是预制资源!' ); return; }\r\n                //开始实例化预制资源\r\n\r\n                for (var prop in info_list) {\r\n                    //声明节点对象\r\n                    let  TipBoxPrefab_icon =  cc.instantiate(loadedResource_icon);\r\n                    let map = TOOLS[prop];\r\n                    let info = TOOLS[prop].biology_list[0];\r\n                    let total =TOOLS[prop].biology_list.length;\r\n                    //战斗胜利移除\r\n                    if(map.map_status==1){\r\n                        TipBoxPrefab_icon.x=map.x\r\n                        TipBoxPrefab_icon.y=map.y\r\n                        // TipBoxPrefab_icon.setPosition(map.x,map.y);  \r\n                        //载入技能图片\r\n                        let image =  httpRequest.httpUrl(info.picture);\r\n                        if(image){\r\n                            cc.loader.load({ url: image }, function (err, texture) {  \r\n                            // cc.loader.loadRes(image, cc.SpriteFrame, function (err, texture) { \r\n                                if (err) {\r\n                                    return;\r\n                                }\r\n                                // TipBoxPrefab_icon.getChildByName('P头像').getComponent(cc.Sprite).spriteFrame = texture; \r\n                                TipBoxPrefab_icon.getChildByName('生物').getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n                            });\r\n                        }else{\r\n                            TipBoxPrefab_icon.getChildByName('P头像').getComponent(cc.Sprite).spriteFrame = false; \r\n                        }\r\n\r\n                        var color = ['#FFFFFF','green','#BDFF00','#FFD100','#FF0000','#ffe000',];\r\n                        var type_color = color[info['yiXing']];\r\n                        // console.log(info)\r\n                        var star ='';    \r\n                        for(var i=0;i<=info['yiXing'];i++){\r\n                            star +='⭐';\r\n                        }\r\n                        TipBoxPrefab_icon.getChildByName('名称').getComponent(cc.Label).string=info['name']+'('+total+')';\r\n                        TipBoxPrefab_icon.getChildByName('名称').color = new cc.color(type_color);\r\n                        TipBoxPrefab_icon.getChildByName('等级').getComponent(cc.Label).string='Lv.'+info['grade']+'('+info['state_name']['name']+')';\r\n                        TipBoxPrefab_icon.getChildByName('等级').color = new cc.color(type_color);\r\n                        TipBoxPrefab_icon.getChildByName('星级').getComponent(cc.Label).string= star;\r\n                        //创建一个新button 并将其挂载到创建的精灵下\r\n                        _this.onConfirBtn(TipBoxPrefab_icon,map.map_int);\r\n                        //写入icon\r\n                        TipBoxPrefab_model.addChild(TipBoxPrefab_icon);\r\n                }\r\n            }\r\n        })\r\n        return TipBoxPrefab_model\r\n    },\r\n    // initInfo (info_list) {\r\n    //     // console.log(info_list)\r\n    //     var info=info_list['biology_list'][0];\r\n    //     var total =info_list['biology_list'].length;\r\n    //     // 初始化该道具相关信息\r\n    //     // 图片\r\n    //     var _this = this;\r\n \r\n    //     if(info['picture']){\r\n    //         var remoteUrl = httpRequest.httpUrl(info['picture']);\r\n    //         // cc.loader.loadRes(httpRequest.httpUrl(info['picture']), cc.SpriteFrame, function (err, spriteFrame) {   \r\n    //         //     console.log(_self)\r\n    //         //     _self.node.getComponent(cc.Sprite).spriteFrame = spriteFrame; \r\n    //         // });\r\n    //         cc.loader.load({ url: remoteUrl }, function (err, texture) {  \r\n    //             // _self.node.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture)\r\n    //             if (err) {\r\n    //                 // cc.error(err.message || err);\r\n    //                 return;\r\n    //             }\r\n    //             if(texture){\r\n    //                 _this.node.getChildByName('生物').getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n    //             }\r\n    //         });\r\n    //     }\r\n    //     // this.server_type.getComponent(cc.Label).string=info['type'];\r\n    //     // if(info['type']==1){\r\n    //     //     this.server_type.getComponent(cc.Label).string='空闲';\r\n    //     //     this.node.getChildByName('server_type').color = new cc.color('green');\r\n    //     // }else if(info['num']<500&&info['num']>=100){\r\n    //     //     this.server_type.getComponent(cc.Label).string='流畅';\r\n    //     //     this.node.getChildByName('server_type').color = new cc.color('#BDFF00');\r\n    //     // }else if(info['num']<1000&&info['num']>=500){\r\n    //     //     this.server_type.getComponent(cc.Label).string='拥挤';\r\n    //     //     this.node.getChildByName('server_type').color = new cc.color('#FFD100');\r\n    //     // }else{\r\n    //     //     this.server_type.getComponent(cc.Label).string='爆满';\r\n    //     //     this.node.getChildByName('server_type').color = new cc.color('#FF0000'); \r\n    //     // }\r\n        \r\n    //     var color = ['#FFFFFF','green','#BDFF00','#FFD100','#FF0000','#ffe000',];\r\n    //     var type_color = color[info['yiXing']];\r\n    //     // console.log(info)\r\n    //     var star ='';    \r\n    //     for(var i=0;i<=info['yiXing'];i++){\r\n    //         star +='⭐';\r\n    //     }\r\n    //     this.node.getChildByName('名称').getComponent(cc.Label).string=info['name']+'('+total+')';\r\n    //     this.node.getChildByName('名称').color = new cc.color(type_color);\r\n    //     this.node.getChildByName('等级').getComponent(cc.Label).string='Lv.'+info['grade']+'('+info['state_name']['name']+')';\r\n    //     this.node.getChildByName('等级').color = new cc.color(type_color);\r\n    //     this.node.getChildByName('星级').getComponent(cc.Label).string= star;\r\n    //     //创建一个新button 并将其挂载到创建的精灵下\r\n    //     this.bindClickEvent( this.node.getComponent(cc.Button),info_list.map_int);\r\n    // },\r\n    // // 绑定按钮事件\r\n    // bindClickEvent: function (button, index) {\r\n    //     // console.log(index)\r\n    //     var clickEventHandler = new cc.Component.EventHandler();\r\n    //     //这个 node 节点是你的事件处理代码组件所属的节点\r\n    //     clickEventHandler.target = this.node; \r\n    //     //这个是代码文件名\r\n    //     clickEventHandler.component = \"mapTools\";  // js脚本文件-绑定\r\n    //     clickEventHandler.handler = \"onConfirBtn\";// js方法名称--绑定\r\n    //     clickEventHandler.customEventData = index; // 回调内容\r\n    //     button.clickEvents.push(clickEventHandler);\r\n    // },\r\n \r\n\r\n    //按钮点击回调\r\n    onConfirBtn:function(TipBoxPrefab_icon,map_int){\r\n        TipBoxPrefab_icon.on('click', function () {\r\n            //session设置战斗请求id\r\n            cc.sys.localStorage.setItem('figthing_map_int', JSON.stringify(map_int)); \r\n            httpRequest.playGame(httpRequest.urlConfig(\"sence_zhandou\"),1);\r\n        })\r\n        // console.log(info)\r\n        // var HttpHelper = require(\"../http\"); \r\n        // var httpRequest = new HttpHelper();\r\n        // httpRequest.httpPost('/app/app-apiword/in-word', {\r\n        //     'id': info['id'],\r\n        //     'star': info['star'],\r\n        //     'token': null\r\n        // }, function (data) {\r\n        //     //跳转到世界\r\n        //     // cc.director.loadScene('战斗场景');\r\n        //     cc.sys.localStorage.setItem('figthing', JSON.stringify(info)); \r\n        //     // console.log(data);\r\n        //     // var server_choes_label  =cc.find(\"Canvas/server/server_choes/server_choes_label\");\r\n        //     // server_choes_label.getComponent(cc.Label).string=info['name'];\r\n        //     // var server_choes_type  =cc.find(\"Canvas/server/server_choes/server_choes_type\");\r\n        //     // server_choes_type.getComponent(cc.Label).string=info['type'];\r\n        //     // server_choes_type.color = new cc.color(info['color']); \r\n        // })\r\n\r\n        // var mask =cc.find(\"Canvas/mask\");\r\n        // mask.active=false\r\n        // var mask =  this.node.getChildByName('mask')\r\n    \r\n        // console.log(this.node.getSiblingIndex())\r\n        // console.log( this.node.parent.getComponent(cc.Button));\r\n     \r\n        // this.node.getChildByName(\"sprite_server_login\").on('click',function(event){\r\n        //     console.log(\"点击到按钮\");\r\n        //     callback();\r\n        // },this);\r\n        // this.node.active =false; // 直接去掉模型节点\r\n    },\r\n \r\n});\r\n"]}
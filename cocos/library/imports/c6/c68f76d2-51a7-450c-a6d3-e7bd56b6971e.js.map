{"version":3,"sources":["assets\\Script\\commonApi\\bag_api.js"],"names":["httpBagApi","cc","Class","Component","http_music","http_globalAsset","model_onload_loading","httpRequestModel","AudioPlayer","httpRequestBagApi","http_home_music","http_base_asset_num","httpRequest","playGame","Promise","resolve","find","getComponent","playBgMusic","http_material_yaohuang","label","loader","loadRes","Material","err","res","material_yaohuang","getInstantiatedMaterial","materialTime","materialPrefab","time","updateEveryFrame","dt","setProperty","schedule","http_base_jiaose","httpPostLogin","data","http_globalData","user_jiaose","jiaose","user_nicheng","nicheng","http_user_info","httpPost","user_info","http_bag_info","biology","TipBoxPrefab_biology_detail","bag","gooduse","zhenfa","zhenfa_info","info","biology_id","zhenfa_id","http_update_goods","goods_key","goodsid","is_bag","http_update_zhenfa","update_data","prop","userBiologyid","removeAllChildren","http_user_beishu_update","beishu","http_user_add_biology","biology_type","window"],"mappings":"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","sourceRoot":"/","sourcesContent":["// 背包的api请求接口\r\nconst httpBagApi = cc.Class({\r\n    extends: cc.Component,\r\n    //没有处理逻辑，可以共用--关闭窗口\r\n    //实例化用户信息\r\n    async http_music(){\r\n        if(!http_globalAsset.model_onload_loading){\r\n            await httpRequestModel.model_onload_loading();//加载进度条\r\n        }\r\n        if(!http_globalAsset.AudioPlayer){\r\n            await httpRequestBagApi.http_home_music();//加载音乐\r\n        }\r\n        // 没有资源，需要重新加载资源\r\n        if(http_globalAsset.http_base_asset_num==0){\r\n            httpRequest.playGame(\"\",0,1) //加载资源的进度条\r\n        }\r\n        // if(!http_globalAsset.http_base_request){\r\n        //     await httpRequestBagApi.http_base_request();//加载音乐\r\n        // }\r\n        // await httpRequestAsset.http_base_asset();  // 引入 资源图片asset\r\n    }, \r\n    // //--基础类加载\r\n    // async http_base_request(){\r\n    //     await httpRequestAsset.http_base_asset();  // 引入 资源图片asset\r\n    //     await httpRequestModel.http_base_model();  // 引入 战斗模型model\r\n    //     http_globalAsset.http_base_request =1; //基础类\r\n    // },\r\n    //加载音乐\r\n    async  http_home_music() {\r\n        //修改请求--等待响应后回调\r\n        return new Promise(resolve => {\r\n            //获取全局播放器\r\n            if(cc.find(\"Audio\")){\r\n                http_globalAsset.AudioPlayer = cc.find(\"Audio\").getComponent(\"AudioManager\");\r\n                //停止再开启背景音乐\r\n                // this.AudioPlayer.stopBgMusic();\r\n                http_globalAsset.AudioPlayer.playBgMusic();\r\n            }\r\n            resolve();\r\n            // httpRequest.httpPost('/app/app-api/get-user',{},function (data) {\r\n            //     //此处可能要判断登录失效 跳转、后期处理\r\n            //     http_globalData.user_info = data.data\r\n            //     resolve();\r\n            // })\r\n            });\r\n    },\r\n    //加载材质\r\n    async  http_material_yaohuang() {\r\n        return new Promise(resolve => {    \r\n            var label ='/materials/builtin_摇晃';\r\n            cc.loader.loadRes(label, cc.Material, function(err, res) {\r\n                httpRequestBagApi.material_yaohuang = cc.Material.getInstantiatedMaterial(res)\r\n\r\n                // // 计算每帧的纹理偏移量\r\n                // this.uvOffset = 1 / this.totalFrames;\r\n                // // 开始播放动画\r\n                // this.schedule(this.updateAnimation, 1 / this.framesPerSecond);\r\n\r\n                resolve();\r\n            })\r\n        });\r\n    },\r\n    materialTime(materialPrefab){\r\n        if(materialPrefab){\r\n            // 定义一个回调函数\r\n            // httpRequestBagApi.\r\n            // 使用 this.schedule 方法来调用这个回调函数，它每帧都会被执行\r\n            // this.schedule(this.update,0);\r\n            // 定义一个回调函数\r\n            var time =0;\r\n            this.updateEveryFrame = function (dt) {\r\n                // dt 是时间间隔，每帧 dt 的值大概是 0.016 秒（即 1/60 秒）\r\n                // 这里可以放置每帧都需要执行的逻辑\r\n                time += dt;\r\n                materialPrefab.setProperty(\"u_time\",time) \r\n            };\r\n            // 使用 this.schedule 方法来调用这个回调函数，它每帧都会被执行\r\n            this.schedule(this.updateEveryFrame, 0);\r\n        }\r\n    },\r\n\r\n    //实例化角色信息\r\n    async http_base_jiaose(){\r\n        //修改请求--等待响应后回调\r\n        return new Promise(resolve => {\r\n            httpRequest.httpPostLogin('/app/api-server/jiaose',{}, function (data) {\r\n                //此处可能要判断登录失效 跳转、后期处理\r\n                http_globalData.user_jiaose = data.data.jiaose\r\n                http_globalData.user_nicheng = data.data.nicheng\r\n                resolve();\r\n            })\r\n        });\r\n    }, \r\n\r\n    //实例化用户信息\r\n   async http_user_info(){\r\n        //修改请求--等待响应后回调\r\n        return new Promise(resolve => {\r\n        httpRequest.httpPost('/app/app-api/get-user',{},function (data) {\r\n            //此处可能要判断登录失效 跳转、后期处理\r\n            http_globalData.user_info = data.data\r\n            resolve();\r\n        })\r\n        });\r\n    },   \r\n    //实例化背包信息\r\n    http_bag_info(){\r\n        //获取生物列表\r\n        return new Promise(resolve => {\r\n        httpRequest.httpPost('/app/app-apinew/biology-list',{}, function (data) {\r\n            //定义常量\r\n            http_globalData.biology = data.data.biology;\r\n            //当前弹出的预制节点--物品详情--装备-卸载\r\n            http_globalData.TipBoxPrefab_biology_detail = null;\r\n            //开启战斗\r\n            http_globalData.bag = data.data.bag;  \r\n            http_globalData.gooduse = data.data.gooduse;  //物品类型\r\n            http_globalData.zhenfa = data.data.zhenfa.data;\r\n            http_globalData.zhenfa_info = data.data.zhenfa.info;\r\n            // 临时字段\r\n            http_globalData.biology_id = 0; //默认选择的生物id\r\n            http_globalData.zhenfa_id = null;//默认选择的阵法id\r\n            resolve();\r\n        })\r\n        });\r\n    },\r\n    //http请求--快速请求接口\r\n    http_update_goods(biology_id,goods_key,goodsid,is_bag){\r\n        //修改请求\r\n        return new Promise(resolve => {\r\n        httpRequest.httpPost('/app/app-api/biology-goods-update',{biology_id:biology_id,goods_key:goods_key,goodsid:goodsid,is_bag:is_bag},function (data) { resolve(data);})\r\n        });\r\n    },  \r\n    //http请求--快速请求接口\r\n    http_update_zhenfa(){\r\n        // var zhenfa =  http_globalData.zhenfa\r\n        return new Promise(resolve => {\r\n        var update_data=[]\r\n        for (var prop in http_globalData.zhenfa) {\r\n            var biology_id = http_globalData.zhenfa[prop];\r\n            if(http_globalData.biology[biology_id]){\r\n                update_data[prop] = http_globalData.biology[biology_id].userBiologyid //获取序号中的生物id\r\n            }else{\r\n                update_data[prop]= biology_id;\r\n            }\r\n        }\r\n        //修改请求\r\n        httpRequest.httpPost('/app/app-api/biology-zhenfa-update',{zhenfa:update_data},function (data) {\r\n            resolve(data);\r\n            cc.find('Canvas/弹窗').removeAllChildren();\r\n            })\r\n        });\r\n    },\r\n \r\n\r\n    //修改倍数\r\n    http_user_beishu_update(){\r\n        //修改请求\r\n       var  beishu = http_globalData.user_info.beishu\r\n        return new Promise(resolve => {\r\n        httpRequest.httpPost('/app/app-api/user-beishu-update',{beishu:beishu},function (data) { resolve(data);})\r\n        });\r\n    },  \r\n\r\n    //获取生物\r\n    http_user_add_biology(biology_type){\r\n        //修改请求\r\n        return new Promise(resolve => {\r\n        httpRequest.httpPost('/app/app-apinew/user-biology',{biology_type:biology_type},function (data) { resolve(data);\r\n        })\r\n        });\r\n    },  \r\n\r\n\r\n});\r\nwindow.httpRequestBagApi = new httpBagApi();"]}